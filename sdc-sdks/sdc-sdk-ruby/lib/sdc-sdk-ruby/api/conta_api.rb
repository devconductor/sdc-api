=begin
API SDC 2016

API desenvolvida para a 15\u00C2\u00AA semanda da computa\u00C3\u00A7\u00C3\u00A3o da UFPB em 2016

OpenAPI spec version: 1.0.0
Contact: pierlabs@conductor.com.br
Generated by: https://github.com/swagger-api/swagger-codegen.git

License: Apache 2.0
http://www.apache.org/licenses/LICENSE-2.0.html

Terms of Service: http://pierlabs.io/terms/

=end

require "uri"

module SDC
  class ContaApi
    attr_accessor :api_client

    def initialize(api_client = ApiClient.default)
      @api_client = api_client
    end

    # Cria uma conta
    # Cria uma conta
    # @param conta conta
    # @param [Hash] opts the optional parameters
    # @return [Conta]
    def create_using_post1(conta, opts = {})
      data, _status_code, _headers = create_using_post1_with_http_info(conta, opts)
      return data
    end

    # Cria uma conta
    # Cria uma conta
    # @param conta conta
    # @param [Hash] opts the optional parameters
    # @return [Array<(Conta, Fixnum, Hash)>] Conta data, response status code and response headers
    def create_using_post1_with_http_info(conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContaApi.create_using_post1 ..."
      end
      
      
      # verify the required parameter 'conta' is set
      fail ArgumentError, "Missing the required parameter 'conta' when calling ContaApi.create_using_post1" if conta.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/v1/contas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(conta)
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:POST, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Conta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContaApi#create_using_post1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Deleta uma conta
    # Deleta uma conta
    # @param id id
    # @param [Hash] opts the optional parameters
    # @return [Response]
    def delete_using_delete(id, opts = {})
      data, _status_code, _headers = delete_using_delete_with_http_info(id, opts)
      return data
    end

    # Deleta uma conta
    # Deleta uma conta
    # @param id id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Response, Fixnum, Hash)>] Response data, response status code and response headers
    def delete_using_delete_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContaApi.delete_using_delete ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling ContaApi.delete_using_delete" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/v1/contas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:DELETE, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Response')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContaApi#delete_using_delete\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retorna todas as contas
    # Retorna todas as contas
    # @param [Hash] opts the optional parameters
    # @return [Array<Conta>]
    def get_all_using_get1(opts = {})
      data, _status_code, _headers = get_all_using_get1_with_http_info(opts)
      return data
    end

    # Retorna todas as contas
    # Retorna todas as contas
    # @param [Hash] opts the optional parameters
    # @return [Array<(Array<Conta>, Fixnum, Hash)>] Array<Conta> data, response status code and response headers
    def get_all_using_get1_with_http_info(opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContaApi.get_all_using_get1 ..."
      end
      
      # resource path
      local_var_path = "/v1/contas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Array<Conta>')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContaApi#get_all_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Retorna uma conta
    # Retorna uma conta
    # @param id id
    # @param [Hash] opts the optional parameters
    # @return [Conta]
    def get_one_using_get1(id, opts = {})
      data, _status_code, _headers = get_one_using_get1_with_http_info(id, opts)
      return data
    end

    # Retorna uma conta
    # Retorna uma conta
    # @param id id
    # @param [Hash] opts the optional parameters
    # @return [Array<(Conta, Fixnum, Hash)>] Conta data, response status code and response headers
    def get_one_using_get1_with_http_info(id, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContaApi.get_one_using_get1 ..."
      end
      
      
      # verify the required parameter 'id' is set
      fail ArgumentError, "Missing the required parameter 'id' when calling ContaApi.get_one_using_get1" if id.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/v1/contas/{id}".sub('{format}','json').sub('{' + 'id' + '}', id.to_s)

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = nil
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:GET, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Conta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContaApi#get_one_using_get1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end

    # Atualiza uma conta
    # Atualiza uma conta
    # @param conta conta
    # @param [Hash] opts the optional parameters
    # @return [Conta]
    def update_using_put1(conta, opts = {})
      data, _status_code, _headers = update_using_put1_with_http_info(conta, opts)
      return data
    end

    # Atualiza uma conta
    # Atualiza uma conta
    # @param conta conta
    # @param [Hash] opts the optional parameters
    # @return [Array<(Conta, Fixnum, Hash)>] Conta data, response status code and response headers
    def update_using_put1_with_http_info(conta, opts = {})
      if @api_client.config.debugging
        @api_client.config.logger.debug "Calling API: ContaApi.update_using_put1 ..."
      end
      
      
      # verify the required parameter 'conta' is set
      fail ArgumentError, "Missing the required parameter 'conta' when calling ContaApi.update_using_put1" if conta.nil?
      
      
      
      
      
      # resource path
      local_var_path = "/v1/contas".sub('{format}','json')

      # query parameters
      query_params = {}

      # header parameters
      header_params = {}

      # HTTP header 'Accept' (if needed)
      local_header_accept = ['application/json']
      local_header_accept_result = @api_client.select_header_accept(local_header_accept) and header_params['Accept'] = local_header_accept_result

      # HTTP header 'Content-Type'
      local_header_content_type = ['application/json']
      header_params['Content-Type'] = @api_client.select_header_content_type(local_header_content_type)

      # form parameters
      form_params = {}

      # http body (model)
      post_body = @api_client.object_to_http_body(conta)
      
      auth_names = ['access_token']
      data, status_code, headers = @api_client.call_api(:PUT, local_var_path,
        :header_params => header_params,
        :query_params => query_params,
        :form_params => form_params,
        :body => post_body,
        :auth_names => auth_names,
        :return_type => 'Conta')
      if @api_client.config.debugging
        @api_client.config.logger.debug "API called: ContaApi#update_using_put1\nData: #{data.inspect}\nStatus code: #{status_code}\nHeaders: #{headers}"
      end
      return data, status_code, headers
    end
  end
end
